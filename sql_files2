
--Great! I want to know about the suplier(s) of our coffee. What are their names and where are they based?
select s.company_name, s.city 
from products p 
join suppliers s ON p.supplier_id = s.supplier_id 
where product_name like '%Coffee%'
â€‹
--Cool! How much coffee are we selling? What are our total sales?
select p.product_name as ProductName, SUM(od.quantity), Round(cast(SUM((od.quantity*od.unit_price)*(1-od.discount)) as numeric),2) as TotalSales
from products p 
join order_details od on p.product_id = od.product_id
where product_name  like '%Coffee%'
group by product_name


------------

select * 
from payment

select
from payment
----------
--1. Per employee, how much revenue has each employee realized from DVD rentals,
-- and how many transactions have each employee handled?
*
select p.staff_id, sum(p.amount) as revenue, count(p.payment_id) as number_transactions
from payment p
group by p.staff_id

----
--2. Figure out the average replacement cost of our movies, by rating.

select f.film_id, f.title, f.rating, avg(f.replacement_cost) as Avg_Replacment_Cost
from film f
group by f.film_id
order by rating 

--------
--3. Get the customer ID's of the top 5 customers, by money spent.

select p.customer_id, sum(p.amount) as money_spent
from payment p
group by p.customer_id
order by 2 desc
limit 5

-----
--4. Return the customer IDs of customers who have spent at least $110 
-- with the staff member who has an ID of 2.

select p.customer_id, p.staff_id, sum(p.amount) as money_spent
from payment p
where p.amount >= '110' and p.staff_id = '2' 
group by p.customer_id, p.staff_id

select p.customer_id, p.staff_id, sum(p.amount) as money_spent
from payment p
where p.staff_id = '2'
group by p.customer_id, p.staff_id 
having sum(p.amount) >= 110
order by 2 DESC



---
--5. Find the names and the payment amounts for customers 
-- with a lifetime purchase amount of greater than $150.

select c.first_name , c.last_name, sum(p.amount) as money_spent
from customer c 
join payment p 
on c.customer_id = p.customer_id 
group by c.first_name, c.last_name 
having sum(p.amount) > 150
order by sum(p.amount) desc

--
--6. Which store has served the most customers?

select s.store_id, count(p.customer_id)
from store s 
join staff s2
on s.store_id = s2.store_id 
join payment p 
on s2.staff_id = p.staff_id 
group by s.store_id, p.customer_id 
order by s.store_id desc
--HOW TO GET A SUM TOTAL FOR ALL NOT INDIVIDUAL ONES??





